// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  username    String?   @unique
  email       String?   @unique
  password    String?
  location    String
  status      Int       @default(1)
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  lastLoginAt DateTime? @updatedAt

  orders      Order[]
  cart        Cart[]

  favoriteProducts Product[]
}

model Product {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  image     String
  name      String
  price     String
  quantity  Int
  status    Int       @default(1)
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt

  // Relations
  orderItems OrderItem[]
  cartItems  CartItem[]
  users       User[]
}

model Order {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId      String    @db.Uuid
  createdAt   DateTime? @default(now())
  updatedAt   DateTime? @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  orderItems  OrderItem[]
}

model Cart {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String    @db.Uuid
  createdAt DateTime? @default(now())
  updatedAt DateTime? @updatedAt
  user      User      @relation(fields: [userId], references: [id])
  cartItems CartItem[]
}

model OrderItem {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  orderId   String    @db.Uuid
  productId String    @db.Uuid
  quantity  Int
  price     String
  order     Order     @relation(fields: [orderId], references: [id])
  product   Product   @relation(fields: [productId], references: [id])
}

model CartItem {
  id        String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  cartId    String    @db.Uuid
  productId String    @db.Uuid
  quantity  Int
  cart      Cart      @relation(fields: [cartId], references: [id])
  product   Product   @relation(fields: [productId], references: [id])
}
